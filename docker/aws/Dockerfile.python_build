#
#   AWS PYTHON BUILD DOCKER FILE
#

ARG RUNTIME_VERSION
ARG DISTRO_VERSION

# 1. STAGE: Define python-alpine base image
FROM python:${RUNTIME_VERSION}-alpine${DISTRO_VERSION} AS python-alpine

# Install GNU C++ standard runtime library
RUN apk add --no-cache libstdc++

# 2. STAGE: Install additional compilers and packages
FROM python-alpine AS build-image

# Include arguments
ARG FUNCTION_DIR
ARG RUNTIME_VERSION

# Install packages
RUN apk add --no-cache \
    build-base \
    libtool \
    autoconf \
    automake \
    libexecinfo-dev \
    make \
    cmake \
    libcurl \
    linux-headers \
    gcc

# Set working dir
WORKDIR ${FUNCTION_DIR}

# Upgrade pip
RUN python${RUNTIME_VERSION} -m pip install --upgrade pip

# Install AWS Lambda Runtime Library
RUN python${RUNTIME_VERSION} -m pip install awslambdaric --target ${FUNCTION_DIR}

# Install faas_profiler for python
ADD /py_faas_profiler/requirements.txt ${FUNCTION_DIR}/requirements_faas_profiler.txt
RUN python${RUNTIME_VERSION} -m pip install -r ${FUNCTION_DIR}/requirements_faas_profiler.txt --target ${FUNCTION_DIR}

ADD py_faas_profiler/ ${FUNCTION_DIR}/py_faas_profiler
ADD shared/ ${FUNCTION_DIR}
RUN python${RUNTIME_VERSION} -m pip install -e ${FUNCTION_DIR}/py_faas_profiler --target ${FUNCTION_DIR}
